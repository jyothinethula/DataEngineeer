{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "startTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select top 5 s.name SchemaName , t.name TableName from sys.tables t join sys.schemas s on s.schema_id=t.schema_id",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlServerTable1",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@concat('select top 5 * from ',item().SchemaName,'.',item().TableName,' where convert(date,ModifiedDate) = CONVERT(DATE, GETDATE())')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "SqlServerTable2",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DelimitedText1",
									"type": "DatasetReference",
									"parameters": {
										"path": {
											"value": "@concat('adventureworks/',item().SchemaName,'/',item().TableName,'/',formatDateTime(utcnow(),'yyyy-MM-dd'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "endTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_adfPipelineExecutions]",
					"storedProcedureParameters": {
						"adfName": {
							"value": {
								"value": "@pipeline().DataFactory",
								"type": "Expression"
							}
						},
						"pipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							}
						},
						"runId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							}
						},
						"triggerType": {
							"value": {
								"value": "@pipeline().TriggerType",
								"type": "Expression"
							}
						},
						"triggerTime": {
							"value": {
								"value": "@formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						},
						"startTime": {
							"value": {
								"value": "@formatDateTime(variables('StartTime'),'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						},
						"EndTime": {
							"value": {
								"value": "@formatDateTime(variables('EndTime'),'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "startTime",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "StartTime",
					"value": {
						"value": "@utcnow()",
						"type": "Expression"
					}
				}
			},
			{
				"name": "endTime",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "EndTime",
					"value": {
						"value": "@utcnow()",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Web1",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "endTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://ilemailalert.azurewebsites.net:443/api/emailAlert/triggers/When_a_HTTP_request_is_received/invoke?api-version=2022-05-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=7Kkb82uqTLVIcFMVxMvQof3O9ZNiaf65PfPcuM9oqI8",
					"method": "POST",
					"headers": {
						"content": "app/json"
					},
					"body": {
						"value": "{\n    \"Pipeline\":\"@{pipeline().Pipeline}\"\n    \"Data Factory\":\"@{pipeline().DataFactory}\"\n    \"RunId\":\"@{pipeline().RunId}\"\n    \"Status\":\"SUCCESS\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Web2",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "endTime",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://ilemailalert.azurewebsites.net:443/api/emailAlert/triggers/When_a_HTTP_request_is_received/invoke?api-version=2022-05-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=7Kkb82uqTLVIcFMVxMvQof3O9ZNiaf65PfPcuM9oqI8",
					"method": "POST",
					"headers": {
						"content": "app/json"
					},
					"body": {
						"value": "{\n    \"pipeline\":\"@{pipeline().Pipeline}\",\n    \"Data Factory\":\"@{pipeline().DataFactory}\",\n    \"Run ID\":\"@{pipeline().RunId}\",\n    \"Status\":\"FAILURE\"\n    \"Error message\":\"@{activity('Copy data1').Error.Message}\"\n}",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"StartTime": {
				"type": "String"
			},
			"EndTime": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-11-15T13:07:36Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}